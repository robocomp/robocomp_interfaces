module RoboCompGridder
{
	struct TPoint
	{
		float x;
        float y;
        float radius;    // radius of the object's bounding box
	};
	
	sequence <TPoint> TPointVector;
	sequence <TPoint> TPath;
	sequence <TPath> TPaths;
	struct TDimensions
	{
        float left;
        float top;
	    float width;
        float height;
	};
	struct Result
	{
		TPaths paths;
		long timestamp;
		string errorMsg;
		bool valid;
	};

  interface Gridder
  {
	Result getPaths(TPoint source, TPoint target, int maxPaths, bool tryClosestFreePoint, bool targetIsHuman);
	TPoint getClosestFreePoint(TPoint source);
	bool setGridDimensions(TDimensions dimensions);
	bool LineOfSightToTarget(TPoint source, TPoint target, float robotRadius);
	bool IsPathBlocked(TPath path);
	Result setLocationAndGetPath(TPoint source, TPoint target, TPointVector freePoints, TPointVector obstaclePoints);
	TDimensions getDimensions();
  };
};

