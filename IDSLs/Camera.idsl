import "CommonHead.idsl";
import "GenericBase.idsl";

module RoboCompCamera
{
  /**@brief exception hardware*/
  exception HardwareFailedException { string what; };
  /**@brief exception moving image*/
  exception MovingImageException { string what; };

  sequence<byte> imgType;
  sequence<int> intVector;

  /** \struct TCamParams
  *@brief struct camera params
  */
  struct TCamParams
  {
    string name;
    string driver;
    string device;
    string mode;
    int focal;
    int width;
    int height;
    int size;
    int numCams;
    int FPS;
    int timerPeriod;
    int leftCamera;
    int rightCamera;
    int bothCameras;
    int inverted;
    int rotated;
    int leftInverted;
    int rightInverted;

    int saturation;
    int lineFreq;

    bool talkToBase;
    bool talkToJointMotor;
  };

  /** \interface Camera
  *@brief interface Camera
  */
  interface Camera
  {
    /**@brief YUV420 format - 2 planes unpacked */
    idempotent void getYUVImage(int cam, out imgType roi,
     out RoboCompCommonHead::THeadState hState,
     out RoboCompGenericBase::TBaseState bState
     ) throws HardwareFailedException;

    /**@brief Luminance - 1 Plane */
    idempotent void getYImage(int cam, out imgType roi,
     out RoboCompCommonHead::THeadState hState,
     out RoboCompGenericBase::TBaseState bState
     ) throws MovingImageException;

    /**@brief Luminance in LogPolar */
    idempotent void getYLogPolarImage(int cam, out imgType roi,
     out RoboCompCommonHead::THeadState hState,
     out RoboCompGenericBase::TBaseState bState
     ) throws MovingImageException;

    /**@brief Luminance - 1 Plane. Compressed and resized. */
    idempotent void getYImageCR(int cam, int div, out imgType roi,
     out RoboCompCommonHead::THeadState hState,
     out RoboCompGenericBase::TBaseState bState
     ) throws MovingImageException;

    /**@brief RGB packed for visualization - 3 planes */
    idempotent void getRGBPackedImage(int cam, out imgType roi,
     out RoboCompCommonHead::THeadState hState,
     out RoboCompGenericBase::TBaseState bState
     ) throws MovingImageException;

    /**@brief Lum + RGB - 4 planes unpacked */
    idempotent void getYRGBImage(int cam, out imgType roi,
     out RoboCompCommonHead::THeadState hState,
     out RoboCompGenericBase::TBaseState bState
     ) throws MovingImageException;

    /**@brief Return relevan comp params
    * @return struct TCamParams
    */
    TCamParams getCamParams();

    /**@brief Inner feeding of images */
    idempotent void setInnerImage(imgType roi);
  };
};
